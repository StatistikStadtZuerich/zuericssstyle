% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sszAirDatepickerInput.R
\name{sszAirDatepickerInput}
\alias{sszAirDatepickerInput}
\title{sszAirDatepickerInput}
\usage{
sszAirDatepickerInput(
  inputId,
  label,
  dateFormat = "dd.mm.yyyy",
  language = "de",
  ssz_icon = NULL,
  ...
)
}
\arguments{
\item{inputId}{inputId parameter for airDatepickerInput}

\item{label}{label parameter for airDatePickerInput}

\item{dateFormat}{optional format parameter for airDatepickerInput, default "dd.mm.yyyy"}

\item{language}{optional language parameter for airDatepickerInput, default "de"}

\item{ssz_icon}{optional parameter to be used as the calendar icon, a html image tag, e.g. htmltools::tags$img(...)}

\item{...}{further named parameters for airDatepickerInput}
}
\value{
the same as dateRangeInput return, with modified label class
}
\description{
sszAirDatepickerInput
}
\examples{
library(shiny)
library(shinyWidgets)

ui <- fluidPage(
  includeCSS(here::here("inst", "css", "sszThemeShiny.css")),
  h1("Widget demo"),
  sszAirDatepickerInput(
    inputId = "airMonth",
    label = "Beispiel",
    dateFormat = "MM-yyyy",
    view = "years",
    minView = "months",
    autoClose = TRUE
  ),
  br(),
  h1("Selected"),
  textOutput("choice")
)

server <- function(input, output, session) {
  # Our dataset
  observeEvent(input$airMonth, {
    output$choice <- renderText(format(input$airMonth, "\%m-\%Y"))
  })
}

shinyApp(ui, server)
}
